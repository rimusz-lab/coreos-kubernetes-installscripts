#cloud-config

# include one or more SSH public keys
users:
  - name: "core"
    passwd: "$1$r454EHtz$NPlN5DzWQbbqMjAsDsAYG/"
    groups:
      - "sudo"
      - "docker"
    ssh-authorized-keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIbj6IsTbHIz/TSbQulLc1kQhXup9VaevHsQZ4BO4HD9siD9T9oPYaTv91x/lxmcJlv+aTsxBT/gh2lTF3uNHoQzy2fmKCBAaEvpZuvzuWjfImowxj5YLmoX+FSMculSw126WGDW9EG4309x6FF77sGbiy6UAA2uOVzXZynTko32Ob3m4ifwL/h+cwGDa/pW8bRIDu9wh7ARXa3x4w/Oypf79KZBOR6Y6Wh5x10Cr4zKGzGQ7I52hIqBxB4K++1tAo5q4RpfrRiEnIku5vqTeZgZuVY2xR8QzhCwAOJeWCnmYh+ZisHY/ZkE7p/oYycu071/gUXCJowfBoBAZsOqBn"
coreos:
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=1
    # specify the initial size of your cluster with ?size=X
    discovery: https://discovery.etcd.io/a5280446b7739fdba706a885cf571515
    advertise-client-urls: http://$public_ipv4:2379,http://$public_ipv4:4001
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$public_ipv4:2380
  units:
    - name: etcd2.service
      command: start    
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
      - name: 50-network-config.conf
        content: |
          [Service]
          ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.1.0.0/16", "Backend": {"Type": "vxlan"}}'   
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
  update:
      reboot-strategy: "etcd-lock"